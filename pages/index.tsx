/* eslint-disable @next/next/no-img-element */
import Head from 'next/head';
import NextLink from 'next/link';
import React, { useCallback, useEffect, useState } from 'react';
import { AuthGuard } from '@components/authentication/auth-guard';
import { MainLayout } from '@layouts/main-layout';
import { Page } from '../types/page';
import { Box, Button, Container, IconButton, Paper, Stack } from '@mui/material';
import { Energy as EnergyIcon } from '@icons/energy';
// Import Swiper React components
import { Swiper, SwiperSlide, useSwiper } from 'swiper/react';
import RootBox from '@components/main/rootbox';
import EmptyBox from '@components/main/rootbox/emptyBox';
import Timer from '@components/main/timer';

// Import Swiper styles
import 'swiper/css';
import 'swiper/css/pagination';
import 'swiper/css/navigation';

// import required modules
import { Navigation, Pagination } from 'swiper';
import { useDispatch } from 'react-redux';
import useAppSelector from '@hooks/use-app-selector';
import { IHeadphone, IHeadphoneReducer } from 'redux/interfaces';
import { fetchHeadphonesAction } from 'redux/actions/headphone';
import { AppDispatch } from 'redux/store';

const earningCap = {
  dailyMax: 50,
  currentEarn: 22.93,
};

const energyCap = {
  max: 4,
  currentEnergy: 1,
};

// const headphones = [
//   { id: '#16452324', image: '/images/headphone_gold.png', level: 5, energy: '100%', type: 'rare' },
//   { id: '#24568454235', image: '/images/headphone_none.png', level: 1, energy: '100%', type: 'common' },
//   { id: '#3347545', image: '/images/headphone_basic.png', level: 20, energy: '100%', type: 'uncommon' },
// ];

const Home: Page = () => {
  const dispatch: AppDispatch = useDispatch();
  const { headphones } = useAppSelector<IHeadphoneReducer | null>((state) => state.headphone);
  const pending = useAppSelector<boolean>((state) => state.headphone.pending);
  const [nowIndex, setNowIndex] = useState(0);
  const [sec, setSec] = useState(59);

  useEffect(() => {
    dispatch(fetchHeadphonesAction());
  }, [dispatch]);

  useEffect(() => {
    timeChange();
  }, []);
  const timeChange = () => {
    setInterval(() => {
      setSec((sec) => sec - 1);
    }, 1000);
  };
  return (
    <>
      <Head>
        <title>L2E Proto</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box component="main">
        <Container sx={{ paddingTop: '0.5rem', backgroundColor: '#121212' }}>
          <Box style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>
            <img src="/images/AudioPOP.png" alt="audioPop" style={{ margin: '21px 0px 25px' }} />
            <Swiper
              slidesPerView={1}
              spaceBetween={8}
              // loop={true}
              navigation={true}
              onSlideChange={(e) => {
                setNowIndex(e.realIndex);
              }}
              flipEffect={{
                limitRotation: true,
              }}
              modules={[Navigation, Pagination]}
            >
              {headphones.map((v, i) => (
                <SwiperSlide style={{ backgroundColor: '#121212' }} key={i}>
                  <Stack direction="column">
                    <Box sx={{ mb: 3, display: 'flex', justifyContent: 'center' }}>
                      <img
                        src={v.image}
                        alt=""
                        style={{ objectFit: 'cover', width: '15rem', height: '15rem', borderRadius: '100%' }}
                      />
                    </Box>
                    <Stack direction={'column'} alignItems="center" justifyContent={'center'} spacing={1}>
                      <Stack direction={'row'} alignItems="center" justifyContent={'center'} spacing={1}>
                        <Stack direction={'row'} alignItems="center" justifyContent={'center'} spacing={1}>
                          <div
                            style={{
                              display: 'flex',
                              justifyContent: 'center',
                              alignItems: 'center',
                              borderRadius: '1.5rem',
                              border: 'solid 1px',
                              borderColor: 'rgba(255,255,255,0.6)',
                              paddingLeft: '0.5rem',
                              paddingRight: '0.5rem',
                              width: '90px',
                            }}
                          >
                            <span style={{ color: 'rgba(255,255,255,0.6)', fontSize: '0.7rem' }}>{v.id}</span>
                          </div>
                        </Stack>
                        <Stack direction={'row'} alignItems="center" justifyContent={'center'} spacing={1}>
                          <div
                            style={{
                              display: 'flex',
                              justifyContent: 'center',
                              alignItems: 'center',
                              borderRadius: '1.5rem',
                              border: 'solid 1px',
                              borderColor: 'rgba(255,255,255,0.6)',
                              paddingLeft: '0.5rem',
                              paddingRight: '0.5rem',
                              width: '90px',
                              position: 'relative',
                            }}
                          >
                            <div
                              style={{
                                backgroundColor: '#3cff96',
                                width: `${(82 * Number(v.battery.slice(0, v.battery.length - 1))) / 100}px`,
                                borderRadius: '1.5rem',
                                height: '12px',
                                position: 'absolute',
                                marginLeft: '3px',
                                left: 0,
                              }}
                            />
                            <EnergyIcon
                              style={{
                                color:
                                  Number(v.battery.slice(0, v.battery.length - 1)) >= 38
                                    ? 'black'
                                    : 'rgba(255,255,255,0.6)',
                                width: '0.6rem',
                                height: '0.6rem',
                                zIndex: 10,
                              }}
                            />
                            <span
                              style={{
                                color:
                                  Number(v.battery.slice(0, v.battery.length - 1)) >= 47
                                    ? 'black'
                                    : 'rgba(255,255,255,0.6)',
                                fontSize: '0.7rem',
                                zIndex: 10,
                              }}
                            >
                              {v.battery.slice(0, 1)}
                            </span>
                            <span
                              style={{
                                color:
                                  Number(v.battery.slice(0, v.battery.length - 1)) >= 54
                                    ? 'black'
                                    : 'rgba(255,255,255,0.6)',
                                fontSize: '0.7rem',
                                zIndex: 10,
                              }}
                            >
                              {v.battery.slice(1, 2)}
                            </span>
                            <span
                              style={{
                                color:
                                  Number(v.battery.slice(0, v.battery.length - 1)) >= 63
                                    ? 'black'
                                    : 'rgba(255,255,255,0.6)',
                                fontSize: '0.7rem',
                                zIndex: 10,
                              }}
                            >
                              {v.battery.slice(2, 3)}
                            </span>
                          </div>
                        </Stack>
                        <Stack direction={'row'} alignItems="center" justifyContent={'center'} spacing={1}>
                          <div
                            style={{
                              display: 'flex',
                              justifyContent: 'center',
                              alignItems: 'center',
                              borderRadius: '1.5rem',
                              border: 'solid 1px',
                              borderColor: 'rgba(255,255,255,0.6)',
                              paddingLeft: '0.5rem',
                              paddingRight: '0.5rem',
                              width: '90px',
                            }}
                          >
                            <span
                              style={{ color: 'rgba(255,255,255,0.6)', fontSize: '0.7rem' }}
                            >{`Lv. ${v.level}`}</span>
                          </div>
                        </Stack>
                      </Stack>
                    </Stack>
                  </Stack>
                </SwiperSlide>
              ))}
            </Swiper>
            <div style={{ display: 'flex', alignItems: 'center', gap: '5px', marginTop: '20px' }}>
              {headphones.map((value, i) => {
                return (
                  <div key={i}>
                    {i === nowIndex ? (
                      <img src="/images/activeNavigatorDot.png" alt="" />
                    ) : (
                      <img src="/images/navigatorDot.png" alt="" />
                    )}
                  </div>
                );
              })}
            </div>
          </Box>
          <Stack sx={{ px: 2 }}>
            {nowIndex === 0 ? (
              <Stack
                style={{
                  display: 'flex',
                  width: '100%',
                  flexDirection: 'row',
                  justifyContent: ' space-evenly',
                  marginTop: '30px',
                  paddingLeft: '5px',
                  paddingRight: '5px',
                }}
              >
                <RootBox time={'23h 58m'} blb={4.28} />
                <EmptyBox />
                <EmptyBox />
                <EmptyBox />
              </Stack>
            ) : nowIndex === 1 ? (
              <Stack
                style={{
                  display: 'flex',
                  width: '100%',
                  flexDirection: 'row',
                  justifyContent: ' space-evenly',
                  marginTop: '30px',
                  paddingLeft: '5px',
                  paddingRight: '5px',
                }}
              >
                <RootBox time={'03h 58m'} blb={0.72} />
                <RootBox time={'10h 20m'} blb={1.97} />
                <RootBox time={'20h 28m'} blb={3.92} />
                <EmptyBox />
              </Stack>
            ) : nowIndex === 2 ? (
              <Stack
                style={{
                  display: 'flex',
                  width: '100%',
                  flexDirection: 'row',
                  justifyContent: ' space-evenly',
                  marginTop: '30px',
                  paddingLeft: '5px',
                  paddingRight: '5px',
                }}
              >
                <RootBox time={'5h 52m'} blb={0.98} />
                <EmptyBox />
                <EmptyBox />
                <EmptyBox />
              </Stack>
            ) : nowIndex === 3 ? (
              <Stack
                style={{
                  display: 'flex',
                  width: '100%',
                  flexDirection: 'row',
                  justifyContent: ' space-evenly',
                  marginTop: '30px',
                  paddingLeft: '5px',
                  paddingRight: '5px',
                }}
              >
                <RootBox time={'10h 8m'} blb={1.92} />
                <RootBox time={'20h 18m'} blb={3.84} />
                <EmptyBox />
                <EmptyBox />
              </Stack>
            ) : nowIndex === 4 ? (
              <Stack
                style={{
                  display: 'flex',
                  width: '100%',
                  flexDirection: 'row',
                  justifyContent: ' space-evenly',
                  marginTop: '30px',
                  paddingLeft: '5px',
                  paddingRight: '5px',
                }}
              >
                <RootBox time={'23h 58m'} blb={4.28} />
                <EmptyBox />
                <EmptyBox />
                <EmptyBox />
              </Stack>
            ) : nowIndex === 5 ? (
              <Stack
                style={{
                  display: 'flex',
                  width: '100%',
                  flexDirection: 'row',
                  justifyContent: ' space-evenly',
                  marginTop: '30px',
                  paddingLeft: '5px',
                  paddingRight: '5px',
                }}
              >
                <RootBox time={'1h 18m'} blb={0.28} />
                <EmptyBox />
                <EmptyBox />
                <EmptyBox />
              </Stack>
            ) : (
              ''
            )}

            {nowIndex === 0 ? (
              <Timer days={'03'} hours={'10'} mins={'59'} secs={'03'} />
            ) : nowIndex === 1 ? (
              <Timer days={'10'} hours={'04'} mins={'30'} secs={'29'} />
            ) : nowIndex === 2 ? (
              <Timer days={'04'} hours={'13'} mins={'29'} secs={'09'} />
            ) : nowIndex === 3 ? (
              <Timer days={'08'} hours={'02'} mins={'10'} secs={'23'} />
            ) : nowIndex === 4 ? (
              <Timer days={'02'} hours={'07'} mins={'23'} secs={'43'} />
            ) : nowIndex === 5 ? (
              <Timer days={'11'} hours={'12'} mins={'12'} secs={'02'} />
            ) : (
              ''
            )}
            <Stack
              sx={{ display: 'flex', flexDirection: 'column', mt: 3 }}
              alignItems="center"
              justifyContent="space-between"
            >
              <Stack flexGrow={1} spacing={1}>
                <Stack direction={'row'} justifyContent="space-between">
                  <Stack direction={'row'} alignItems="center" justifyContent={'center'} spacing={1}>
                    <img src="/images/blb-symbol.png" alt="" style={{ width: '1.2rem', height: '1.2rem' }} />
                    <span style={{ color: 'white', fontWeight: '900', fontSize: '0.8rem' }}>0.00</span>
                  </Stack>
                  <span style={{ color: 'rgba(255,255,255,0.6)', fontWeight: '900', fontSize: '0.8rem' }}>
                    100.00 BLB
                  </span>
                </Stack>
                <div
                  style={{
                    display: 'flex',
                    width: '360px',
                    minHeight: '0.6rem',
                    backgroundImage: 'linear-gradient(180deg, #121212 -42.8%, #FFFFFF 98.21%)',
                    opacity: '0.2',
                    borderRadius: '24px',
                  }}
                />
              </Stack>
              <Stack flexGrow={1} spacing={1} sx={{ mt: 2 }}>
                <Stack direction={'row'} justifyContent="space-between">
                  <Stack direction={'row'} alignItems="center" justifyContent={'center'} spacing={1}>
                    <div
                      style={{
                        backgroundColor: 'rgba(255,255,255,1)',
                        borderRadius: '1.5rem',
                        display: 'flex',
                        justifyContent: 'center',
                        alignItems: 'center',
                        padding: '0.1rem',
                      }}
                    >
                      <EnergyIcon style={{ color: '#121212', width: '0.9rem', height: '0.9rem' }} />
                    </div>
                    <span style={{ color: 'white', fontSize: '0.9rem' }}>
                      {headphones.length > 0 &&
                        Number(headphones[nowIndex].battery.slice(0, headphones[nowIndex].battery.length - 1))}
                      /100
                    </span>
                  </Stack>
                  <span style={{ color: 'rgba(255,255,255,0.6)', fontWeight: '900', fontSize: '0.8rem' }}>
                    Total Battery
                  </span>
                </Stack>
                <div
                  style={{
                    display: 'flex',
                    width: '360px',
                  }}
                >
                  <div
                    style={{
                      display: 'flex',
                      width: '360px',
                      minHeight: '0.6rem',
                      backgroundImage: 'linear-gradient(180deg, #121212 -42.8%, #FFFFFF 98.21%)',
                      opacity: '0.2',
                      borderRadius: '24px',
                    }}
                  />
                  <div
                    style={
                      headphones.length > 0
                        ? {
                            position: 'absolute',
                            display: 'flex',
                            width: `${
                              (360 *
                                Number(
                                  headphones[nowIndex].battery.slice(0, headphones[nowIndex].battery.length - 1)
                                )) /
                              100
                            }px`,

                            minHeight: '0.6rem',
                            backgroundColor: 'rgba(255,255,255,1)',
                            borderRadius: '24px',
                            boxShadow: '0rem 0rem 0.4rem #fff',
                          }
                        : {}
                    }
                  />
                </div>
              </Stack>
            </Stack>
            <Stack spacing={1} sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>
              <Box sx={{ display: 'flex', justifyContent: 'center' }}>
                <NextLink href="/playlist/sample" passHref>
                  <div
                    style={{
                      display: 'flex',
                      justifyContent: 'center',
                      alignItems: 'center',
                      paddingLeft: '3rem',
                      paddingRight: '3rem',
                      backgroundColor: 'white',
                      color: 'black',
                      width: '70%',
                      minHeight: '3.5rem',
                      borderRadius: '0.5rem',
                    }}
                  >
                    <span style={{ fontSize: 'large', fontWeight: '900', fontFamily: 'Gilroy-ExtraBold' }}>
                      Go To Playlist
                    </span>
                  </div>
                </NextLink>
              </Box>
            </Stack>
          </Stack>
        </Container>
      </Box>
    </>
  );
};

Home.getLayout = (page: React.ReactElement) => (
  <AuthGuard>
    <MainLayout>{page}</MainLayout>
  </AuthGuard>
);

export default Home;
